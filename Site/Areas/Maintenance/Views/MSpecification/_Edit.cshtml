@model Models.Maintenance.MSpecification.EditFormModel
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#EditForm");

        $('#MaterialType').change(function () {
            var val = $(this).val();

            if (val === '') {
                $('#FormInput_MaterialType').val('').prop('readonly', true);
            }
            else if (val === '@Utility.Define.New') {
                $('#FormInput_MaterialType').val('').prop('readonly', false);
            }
            else {
                $('#FormInput_MaterialType').val(val).prop('readonly', true);
            }
        });

        $('#OptionList tbody').sortable().disableSelection();

        BindRemoveEvent();
    });

    var Save = function () {
        var form = $('#EditForm');

        if (form.valid()) {
            if ($('#FormInput_MaterialType').val() === '') {
                $.InfoDialog('@Resources.Resource.MaterialTypeRequired');
            }
            else {
                var data = [];

                $('.Description').each(function () {
                    if ($(this).val() !== '') {
                        data.push($(this).data('uniqueid') + '@Utility.Define.Seperator' + $(this).val());
                    }
                });

                $('#FormInput_MaterialSpecificationOptionsString').val(JSON.stringify(data));

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: '@Url.Action("Edit")',
                    data: form.serialize(),
                    dataType: "json",
                    beforeSend: function () { $.Overlay('show'); },
                    success: function (data) {
                        $.Overlay('hide');

                        if (data.IsSuccess) {
                            Query();
                            $.SuccessDialog(data.Message);
                        }
                        else {
                            $.ErrorDialog(data.Message);
                        }
                    },
                    error: function (x, h, r) {
                        $.Overlay('hide');
                        $.ErrorDialog(x.responseText);
                    }
                });
            }
        }
    };

    var Add = function () {
        $('#OptionList tbody').append('<tr><td class="col-sm-1 center"><div class="action-buttons"><a class="red Remove" href="#" title="@Resources.Resource.Delete"><i class="ace-icon fa fa-trash-o bigger-130"></i></a></div></td><td class="col-sm-11"><input class="Description col-sm-6" type="text" data-uniqueid="" /></td></tr>');

        BindRemoveEvent();

        $('#OptionList tbody').sortable().disableSelection();

        return false;
    };

    function BindRemoveEvent() {
        $('.Remove').click(function () {
            $(this).closest('tr').remove();

            return false;
        });
    }
</script>
<p>
    @if (ViewBag.CanEdit)
    {
        <button class="btn btn-app btn-primary btn-xs" onclick="Save();" type="button">
            <i class="ace-icon fa fa-save bigger-160"></i>
            @Resources.Resource.Save
        </button>
    }
    <button class="btn btn-app btn-success btn-xs" onclick="Detail('@Model.MaterialSpecificationId');" type="button">
        <i class="ace-icon fa fa-ban bigger-160"></i>
        @Resources.Resource.Cancel
    </button>
</p>
<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.Edit @Resources.Resource.MaterialSpecification</h5>
    </div>
    <div class="widget-body">
        <div class="widget-main no-padding">
            @using (Html.BeginForm("Edit", null, FormMethod.Post, new { @ID = "EditForm" }))
            {
                @Html.HiddenFor(x => x.MaterialSpecificationId)
                @Html.HiddenFor(x => x.OrganizationId)
                @Html.HiddenFor(x => x.FormInput.MaterialSpecificationOptionsString)

                <table class="table table-bordered table-input">
                    <tr>
                        <th>@Html.LabelFor(x => x.ParentOrganizationFullName)</th>
                        <td colspan="3">@Html.DisplayFor(x => x.ParentOrganizationFullName)</td>
                    </tr>
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.FormInput.MaterialType)</th>
                        <td class="col-sm-5">@Html.DropDownList("MaterialType", Model.MaterialTypeSelectItems)</td>
                        <th class="col-sm-1">@Html.LabelFor(x => x.FormInput.MaterialType)</th>
                        <td class="col-sm-5">
                            @Html.TextBoxFor(x => x.FormInput.MaterialType, new { @class = "col-sm-11", @readonly = "readonly" })
                            <br />
                            @Html.ValidationMessageFor(x => x.FormInput.MaterialType)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.LabelFor(x => x.FormInput.Name)</th>
                        <td colspan="3">
                            @Html.TextBoxFor(x => x.FormInput.Name, new { @class = "col-sm-11" })
                            <br />
                            @Html.ValidationMessageFor(x => x.FormInput.Name)
                        </td>
                    </tr>
                </table>
            }
        </div>
    </div>
</div>
<div class="space"></div>
<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.MaterialSpecification @Resources.Resource.Option</h5>
    </div>
    <div class="widget-body">
        <div class="widget-main no-padding">
            <table id="OptionList" class="table table-bordered">
                <thead class="thin-border-bottom">
                    <tr>
                        <th class="col-sm-1"></th>
                        <th class="col-sm-11">@Resources.Resource.Option @Resources.Resource.MaterialSpecificationName</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var option in Model.MaterialSpecificationOptionModels)
                    {
                        <tr>
                            <td class="col-sm-1 center">
                                <div class="action-buttons">
                                    <a class="red Remove" href="#" title="@Resources.Resource.Delete"><i class="ace-icon fa fa-trash-o bigger-130"></i></a>
                                </div>
                            </td>
                            <td class="col-sm-11">
                                <input class="Description col-sm-6" type="text" value="@option.Name" data-uniqueid="@option.MaterialSpecificationOptionId" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="widget-toolbox padding-8 clearfix">
            <button class="btn btn-primary" onclick="Add();">
                <i class="ace-icon fa fa-plus"></i>
                @Resources.Resource.Add
            </button>
        </div>
    </div>
</div>

